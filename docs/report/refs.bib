@inproceedings{popic2016performance,
  title={Performance evaluation of using Protocol Buffers in the Internet of Things communication},
  author={Popi{\'c}, Sr{\dj}an and Pezer, Dra{\v{z}}en and Mrazovac, Bojan and Tesli{\'c}, Nikola},
  booktitle={2016 International Conference on Smart Systems and Technologies (SST)},
  pages={261--265},
  year={2016},
  organization={IEEE}
}

@misc{VideoCallRs,
  author = {SecurityUnion},
  title = {VideoCallRs},
  year = {2024},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/security-union/videocall-rs}},
}

@misc{rfc6716,
    series =    {Request for Comments},
    number =    6716,
    howpublished =  {RFC 6716},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC6716},
    url =       {https://www.rfc-editor.org/info/rfc6716},
    author =    {Jean-Marc Valin and Koen Vos and Timothy B. Terriberry},
    title =     {{Definition of the Opus Audio Codec}},
    pagetotal = 326,
    year =      2012,
    month =     sep,
    abstract =  {This document defines the Opus interactive speech and audio codec. Opus is designed to handle a wide range of interactive audio applications, including Voice over IP, videoconferencing, in-game chat, and even live, distributed music performances. It scales from low bitrate narrowband speech at 6 kbit/s to very high quality stereo music at 510 kbit/s. Opus uses both Linear Prediction (LP) and the Modified Discrete Cosine Transform (MDCT) to achieve good compression of both speech and music. {[}STANDARDS-TRACK{]}},
}

@misc{rfc9000,
    series =    {Request for Comments},
    number =    9000,
    howpublished =  {RFC 9000},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9000},
    url =       {https://www.rfc-editor.org/info/rfc9000},
    author =    {Jana Iyengar and Martin Thomson},
    title =     {{QUIC: A UDP-Based Multiplexed and Secure Transport}},
    pagetotal = 151,
    year =      2021,
    month =     may,
    abstract =  {This document defines the core of the QUIC transport protocol. QUIC provides applications with flow-controlled streams for structured communication, low-latency connection establishment, and network path migration. QUIC includes security measures that ensure confidentiality, integrity, and availability in a range of deployment circumstances. Accompanying documents describe the integration of TLS for key negotiation, loss detection, and an exemplary congestion control algorithm.},
}

@article{rossberg2021webassembly,
  title={Webassembly specification},
  author={Rossberg, Andreas},
  journal={WebAssembly Community Group},
  volume={2},
  year={2021}
}


@misc{Nats,
  title = {{Nats}},
  howpublished = {\url{https://nats.io/}},
  note = {Accessed: 2024-04-10}
}

@misc{ProtcolBuffer,
  title = {{Protobuf}},
  howpublished = {\url{https://protobuf.dev/}},
  note = {Accessed: 2024-04-10}
}

@misc{RustChaCha,
  title = {{ChaCha implementation}},
  howpublished = {\url{https://rust-random.github.io/rand/rand_chacha/struct.ChaCha8Rng.html}},
  note = {Accessed: 2024-04-10}
}
